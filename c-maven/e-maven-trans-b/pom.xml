<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.jiehfut</groupId>
    <artifactId>e-maven-trans-b</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>


    <dependencies>
        <!--b 依赖了 druid && junit，而 a 依赖了 b-->
        <!--并不是所有的依赖都能依赖传递-->
        <!--compile 可以传递，test && provided 不能传递-->
        <!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.2.8</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!--也可以给依赖 dependency 标签设置一个 optional 标签，为 true 设置终止传递-->

        <!--
        依赖冲突发生的三种情况: 1，2，3
            - 非 compile 范围进行依赖传递
            - 使用 optional 配置终止传递
            - 依赖冲突（传递的依赖已经存在）
        -->


        <!--例如 jackson 需要引入三个依赖，但是由于 data-bind 中，此依赖其他两个依赖，所以只需要配置一个依赖-->
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.10.0</version>
        </dependency>




        <!--
            maven 中依赖冲突如何解决
            默认：短路优先原则 && 依赖路径长度相同的情况下，则 “先声明优先”


            如果想要手动解决依赖冲突问题
            在 dependency 标签中进行依赖排除
            在某个依赖中排除，该依赖中被排除的依赖就不会进入该项目
            <exclusions>
                <exclusion>
                    <groupId>com.alibaba</groupId>
                    <artifactId>druid</artifactId>
                </exclusion>
            </exclusions>
        -->

    </dependencies>

</project>